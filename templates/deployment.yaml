---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Values.redis.service.name }}
  labels:
    run: {{ .Values.redis.service.name }}
spec:
  ports:
  - port: {{ .Values.redis.service.port }}
    targetPort: {{ .Values.redis.service.port }}
    protocol: TCP
  selector:
    defacementComponent: {{ .Values.redis.podName }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Values.redis.podName }}
  labels:
    defacementComponent: {{ .Values.redis.podName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      defacementComponent: {{ .Values.redis.podName }}
  template:
    metadata:
      labels:
        defacementComponent: {{ .Values.redis.podName }}
    spec:
      containers:
        - image: {{ .Values.redis.image }}
          name: {{ .Values.redis.podName }}
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - redis-cli ping
            initialDelaySeconds: {{ .Values.probes.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.livenessProbe.periodSeconds }}
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Values.rabbitmq.service.name }}
  labels:
    run: {{ .Values.rabbitmq.service.name }}
spec:
  ports:
  - port: {{ .Values.rabbitmq.service.managementPort }}
    targetPort: {{ .Values.rabbitmq.service.managementPort }}
    protocol: TCP
    name: management-port
  - port: {{ .Values.rabbitmq.service.defaultPort }}
    targetPort: {{ .Values.rabbitmq.service.defaultPort }}
    protocol: TCP
    name: default-port
  selector:
    defacementComponent: {{ .Values.rabbitmq.podName }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Values.rabbitmq.podName }}
  labels:
    defacementComponent: {{ .Values.rabbitmq.podName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      defacementComponent: {{ .Values.rabbitmq.podName }}
  template:
    metadata:
      labels:
        defacementComponent: {{ .Values.rabbitmq.podName }}
    spec:
      containers:
        - image: {{ .Values.rabbitmq.image }}
          name: {{ .Values.rabbitmq.podName }}
          env:
          - name: "RABBITMQ_DEFAULT_USER"
            value: {{ .Values.rabbitmq.user | quote }}
          - name: "RABBITMQ_DEFAULT_PASS"
            value: {{ .Values.rabbitmq.pass | quote }}
          - name: "RABBITMQ_DEFAULT_VHOST"
            value: {{ .Values.rabbitmq.vhost | quote }}
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - rabbitmq-diagnostics -q ping
            initialDelaySeconds: {{ .Values.probes.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.livenessProbe.periodSeconds }}
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Values.mysql.serviceName }}
  labels:
    run: {{ .Values.mysql.serviceName }}
spec:
  ports:
  - port: {{ .Values.mysql.port }}
    targetPort: {{ .Values.mysql.port }}
  selector:
    defacementComponent: {{ .Values.mysql.podName }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Values.mysql.podName }}
  labels:
    defacementComponent: {{ .Values.mysql.podName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      defacementComponent: {{ .Values.mysql.podName }}
  template:
    metadata:
      labels:
        defacementComponent: {{ .Values.mysql.podName }}
    spec:
      containers:
      - image: nacos/nacos-mysql:5.7
        name: {{ .Values.mysql.podName }}
        securityContext:
          privileged: true
        volumeMounts:
        - name: {{ .Values.mysql.pvName }}
          mountPath: /var/lib/mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "root"
        - name: MYSQL_DATABASE
          value: "nacos_devtest"
        - name: MYSQL_USER
          value: "nacos"
        - name: MYSQL_PASSWORD
          value: "nacos"
      volumes:
        - name: {{ .Values.mysql.pvName }}
          persistentVolumeClaim:
            claimName: {{ .Values.mysql.pvName }}
---